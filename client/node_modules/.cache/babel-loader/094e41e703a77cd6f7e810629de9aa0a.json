{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { useState, useEffect } from 'react';\n// import axios from 'axios';\n// axios.defaults.baseURL = 'http://localhost:5000/api/v1/';\n// const useAxios = ({ url, method, body = null, headers = null }) => {\n//     const [response, setResponse] = useState(null);\n//     const [error, setError] = useState('');\n//     const [loading, setloading] = useState(true);\n//     const fetchData = () => {\n//         axios[method](url, JSON.parse(headers), JSON.parse(body))\n//             .then((res) => {\n//                 setResponse(res.data);\n//             })\n//             .catch((err) => {\n//                 setError(err);\n//             })\n//             .finally(() => {\n//                 setloading(false);\n//             });\n//     };\n//     useEffect(() => {\n//         fetchData();\n//     }, [method, url, body, headers]);\n//     return { response, error, loading };\n// };\n// export default useAxios;\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useAxios = configParams => {\n  _s();\n\n  axios.defaults.baseURL = \"http://localhost:5000/api/v1/\";\n  const [res, setRes] = useState(null);\n  const [err, setErr] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchDataUsingAxios(configParams);\n  }, []);\n\n  const fetchDataUsingAxios = async () => {\n    await axios.request(configParams).then(res => setRes(res)).catch(err => {\n      setErr(err);\n\n      if (error.response) {\n        // Request made and server responded\n        console.log(error.response.data);\n        setData(error.response.data); // console.log(error.response.status);\n        // console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log(\"Error\", error.message);\n      }\n    }).finally(() => setLoading(false));\n  };\n\n  return [res, err, loading];\n};\n\n_s(useAxios, \"IBA8c0bgS7K9RQ6qFT4gObGdkkE=\");\n\nexport default useAxios;","map":{"version":3,"names":["useEffect","useState","axios","useAxios","configParams","defaults","baseURL","res","setRes","err","setErr","loading","setLoading","fetchDataUsingAxios","request","then","catch","error","response","console","log","data","setData","message","finally"],"sources":["/home/amol/Amol/Portfolio/frontend/portfolio/src/hooks/useAxios.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:5000/api/v1/';\n\n// const useAxios = ({ url, method, body = null, headers = null }) => {\n//     const [response, setResponse] = useState(null);\n//     const [error, setError] = useState('');\n//     const [loading, setloading] = useState(true);\n\n//     const fetchData = () => {\n//         axios[method](url, JSON.parse(headers), JSON.parse(body))\n//             .then((res) => {\n//                 setResponse(res.data);\n//             })\n//             .catch((err) => {\n//                 setError(err);\n//             })\n//             .finally(() => {\n//                 setloading(false);\n//             });\n//     };\n\n//     useEffect(() => {\n//         fetchData();\n//     }, [method, url, body, headers]);\n\n//     return { response, error, loading };\n// };\n\n// export default useAxios;\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst useAxios = (configParams) => {\n  axios.defaults.baseURL = \"http://localhost:5000/api/v1/\";\n  const [res, setRes] = useState(null);\n  const [err, setErr] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchDataUsingAxios(configParams);\n  }, []);\n  const fetchDataUsingAxios = async () => {\n    await axios\n      .request(configParams)\n      .then((res) => setRes(res))\n      .catch((err) => {\n        setErr(err);\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response.data);\n          setData(error.response.data);\n          // console.log(error.response.status);\n          // console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n  return [res, err, loading];\n};\nexport default useAxios;\n"],"mappings":";;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;EAAA;;EACjCF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,+BAAzB;EACA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,IAAD,CAA9B;EACA,MAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EACAD,SAAS,CAAC,MAAM;IACda,mBAAmB,CAACT,YAAD,CAAnB;EACD,CAFQ,EAEN,EAFM,CAAT;;EAGA,MAAMS,mBAAmB,GAAG,YAAY;IACtC,MAAMX,KAAK,CACRY,OADG,CACKV,YADL,EAEHW,IAFG,CAEGR,GAAD,IAASC,MAAM,CAACD,GAAD,CAFjB,EAGHS,KAHG,CAGIP,GAAD,IAAS;MACdC,MAAM,CAACD,GAAD,CAAN;;MACA,IAAIQ,KAAK,CAACC,QAAV,EAAoB;QAClB;QACAC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeG,IAA3B;QACAC,OAAO,CAACL,KAAK,CAACC,QAAN,CAAeG,IAAhB,CAAP,CAHkB,CAIlB;QACA;MACD,CAND,MAMO,IAAIJ,KAAK,CAACH,OAAV,EAAmB;QACxB;QACAK,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACH,OAAlB;MACD,CAHM,MAGA;QACL;QACAK,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACM,OAA3B;MACD;IACF,CAlBG,EAmBHC,OAnBG,CAmBK,MAAMZ,UAAU,CAAC,KAAD,CAnBrB,CAAN;EAoBD,CArBD;;EAsBA,OAAO,CAACL,GAAD,EAAME,GAAN,EAAWE,OAAX,CAAP;AACD,CA/BD;;GAAMR,Q;;AAgCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}