{"ast":null,"code":"var _jsxFileName = \"/home/amol/Submit On/client/src/pages/ResetPassword/ResetPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { TextInputAuth } from \"../../components/TextInputAuth\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport PasswordIcon from \"../../assets/icons/password.svg\";\nimport { ToastContainer, notify } from \"../../utils/toast\";\nimport { useDispatch } from \"react-redux\";\nimport \"./ResetPassword.css\";\nimport ResetPassWordValidator from \"../../validation/ResetPassword\";\nimport { changePassword } from \"../../actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const initialState = {\n    inputPassword: \"\",\n    inputReEnterPassword: \"\"\n  };\n  const [state, setState] = useState(initialState);\n  const {\n    userId,\n    resetToken\n  } = useParams();\n  const dispatch = useDispatch(); // Handle input change for each input\n\n  function handleChange(e) {\n    const value = e.target.value;\n    setState({ ...state,\n      [e.target.name]: value\n    });\n  }\n\n  const trimData = data => {\n    const {\n      password,\n      reEnterPassword\n    } = data;\n    return {\n      password: password.trim(),\n      reEnterPassword: reEnterPassword.trim()\n    };\n  }; // Handle Reset button click\n\n\n  function handleResetPassword(e) {\n    e.preventDefault();\n    const reqBody = {\n      password: state.inputPassword,\n      reEnterPassword: state.inputReEnterPassword\n    };\n    const trimmedData = trimData(reqBody);\n    const isValid = ResetPassWordValidator.validate(trimmedData, notify);\n\n    if (isValid) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"sign-in-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-in-form\",\n      children: [/*#__PURE__*/_jsxDEV(TextInputAuth, {\n        icon: PasswordIcon,\n        type: \"password\",\n        label: \"Password\",\n        name: \"inputPassword\",\n        value: state.inputPassword,\n        placeholder: \"Enter your password here\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInputAuth, {\n        icon: PasswordIcon,\n        type: \"password\",\n        label: \"Re-enter Password\",\n        name: \"inputReEnterPassword\",\n        value: state.inputReEnterPassword,\n        placeholder: \"Re-Enter your password here\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"PVZC08/HfTxsE+3/l/LJYXe7vf4=\", false, function () {\n  return [useNavigate, useParams, useDispatch];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","TextInputAuth","PrimaryButton","PasswordIcon","ToastContainer","notify","useDispatch","ResetPassWordValidator","changePassword","ResetPassword","props","navigate","initialState","inputPassword","inputReEnterPassword","state","setState","userId","resetToken","dispatch","handleChange","e","value","target","name","trimData","data","password","reEnterPassword","trim","handleResetPassword","preventDefault","reqBody","trimmedData","isValid","validate"],"sources":["/home/amol/Submit On/client/src/pages/ResetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { TextInputAuth } from \"../../components/TextInputAuth\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport PasswordIcon from \"../../assets/icons/password.svg\";\nimport { ToastContainer, notify } from \"../../utils/toast\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport \"./ResetPassword.css\";\nimport ResetPassWordValidator from \"../../validation/ResetPassword\";\nimport { changePassword } from \"../../actions/auth\";\n\nfunction ResetPassword(props) {\n  const navigate = useNavigate();\n\n  const initialState = {\n    inputPassword: \"\",\n    inputReEnterPassword: \"\",\n  };\n  const [state, setState] = useState(initialState);\n\n  const { userId, resetToken } = useParams();\n\n  const dispatch = useDispatch();\n\n  // Handle input change for each input\n  function handleChange(e) {\n    const value = e.target.value;\n    setState({\n      ...state,\n      [e.target.name]: value,\n    });\n  }\n\n  const trimData = (data) => {\n    const { password, reEnterPassword } = data;\n    return {\n      password: password.trim(),\n      reEnterPassword: reEnterPassword.trim(),\n    };\n  };\n\n  // Handle Reset button click\n  function handleResetPassword(e) {\n    e.preventDefault();\n    const reqBody = {\n      password: state.inputPassword,\n      reEnterPassword: state.inputReEnterPassword,\n    };\n    const trimmedData = trimData(reqBody);\n    const isValid = ResetPassWordValidator.validate(trimmedData, notify);\n    if (isValid) {\n      \n    }\n  }\n  return (\n    <section className=\"sign-in-container\">\n      <h1>Reset Password</h1>\n      <form className=\"sign-in-form\">\n        <TextInputAuth\n          icon={PasswordIcon}\n          type={\"password\"}\n          label={\"Password\"}\n          name={\"inputPassword\"}\n          value={state.inputPassword}\n          placeholder={\"Enter your password here\"}\n          onChange={handleChange}\n        />\n        <TextInputAuth\n          icon={PasswordIcon}\n          type={\"password\"}\n          label={\"Re-enter Password\"}\n          name={\"inputReEnterPassword\"}\n          value={state.inputReEnterPassword}\n          placeholder={\"Re-Enter your password here\"}\n          onChange={handleChange}\n        />\n        <PrimaryButton onClick={handleResetPassword}>\n          Reset Password\n        </PrimaryButton>\n      </form>\n      <ToastContainer />\n    </section>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,mBAAvC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,qBAAP;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,SAASC,cAAT,QAA+B,oBAA/B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC5B,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EAEA,MAAMa,YAAY,GAAG;IACnBC,aAAa,EAAE,EADI;IAEnBC,oBAAoB,EAAE;EAFH,CAArB;EAIA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAACc,YAAD,CAAlC;EAEA,MAAM;IAAEK,MAAF;IAAUC;EAAV,IAAyBlB,SAAS,EAAxC;EAEA,MAAMmB,QAAQ,GAAGb,WAAW,EAA5B,CAX4B,CAa5B;;EACA,SAASc,YAAT,CAAsBC,CAAtB,EAAyB;IACvB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;IACAN,QAAQ,CAAC,EACP,GAAGD,KADI;MAEP,CAACM,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBF;IAFV,CAAD,CAAR;EAID;;EAED,MAAMG,QAAQ,GAAIC,IAAD,IAAU;IACzB,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAAgCF,IAAtC;IACA,OAAO;MACLC,QAAQ,EAAEA,QAAQ,CAACE,IAAT,EADL;MAELD,eAAe,EAAEA,eAAe,CAACC,IAAhB;IAFZ,CAAP;EAID,CAND,CAtB4B,CA8B5B;;;EACA,SAASC,mBAAT,CAA6BT,CAA7B,EAAgC;IAC9BA,CAAC,CAACU,cAAF;IACA,MAAMC,OAAO,GAAG;MACdL,QAAQ,EAAEZ,KAAK,CAACF,aADF;MAEde,eAAe,EAAEb,KAAK,CAACD;IAFT,CAAhB;IAIA,MAAMmB,WAAW,GAAGR,QAAQ,CAACO,OAAD,CAA5B;IACA,MAAME,OAAO,GAAG3B,sBAAsB,CAAC4B,QAAvB,CAAgCF,WAAhC,EAA6C5B,MAA7C,CAAhB;;IACA,IAAI6B,OAAJ,EAAa,CAEZ;EACF;;EACD,oBACE;IAAS,SAAS,EAAC,mBAAnB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,cAAhB;MAAA,wBACE,QAAC,aAAD;QACE,IAAI,EAAE/B,YADR;QAEE,IAAI,EAAE,UAFR;QAGE,KAAK,EAAE,UAHT;QAIE,IAAI,EAAE,eAJR;QAKE,KAAK,EAAEY,KAAK,CAACF,aALf;QAME,WAAW,EAAE,0BANf;QAOE,QAAQ,EAAEO;MAPZ;QAAA;QAAA;QAAA;MAAA,QADF,eAUE,QAAC,aAAD;QACE,IAAI,EAAEjB,YADR;QAEE,IAAI,EAAE,UAFR;QAGE,KAAK,EAAE,mBAHT;QAIE,IAAI,EAAE,sBAJR;QAKE,KAAK,EAAEY,KAAK,CAACD,oBALf;QAME,WAAW,EAAE,6BANf;QAOE,QAAQ,EAAEM;MAPZ;QAAA;QAAA;QAAA;MAAA,QAVF,eAmBE,QAAC,aAAD;QAAe,OAAO,EAAEU,mBAAxB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAyBE,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;GAxEQrB,a;UACUV,W,EAQcC,S,EAEdM,W;;;KAXVG,a;AA0ET,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}