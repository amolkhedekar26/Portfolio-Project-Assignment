{"ast":null,"code":"var _jsxFileName = \"/home/amol/Downloads/frontend/portfolio/src/pages/Profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { TextArea } from \"../../components/TextArea\";\nimport { TextInput } from \"../../components/TextInput\";\nimport { TextInputRef } from \"../../components/TextInputRef\";\nimport { TextAreaRef } from \"../../components/TextAreaRef\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport \"./Profile.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProfile, createProfile } from \"../../actions/profile\";\nimport { Modal } from \"../../components/Modal\";\nimport ProfileHeader from \"./components/ProfileHeader\";\nimport ProfileDetails from \"./components/ProfileDetails\";\nimport EditProfileModal from \"./components/EditProfileModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile(props) {\n  _s();\n\n  const initialStateModalForm = {\n    inputFirstName: \"\",\n    inputLastName: \"\",\n    inputLocation: \"\",\n    inputContact: \"\",\n    inputAbout: \"\"\n  };\n  const [stateModalForm, setStateModalForm] = useState(initialStateModalForm);\n  let navigate = useNavigate();\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const [data, setData] = useState({});\n  const [isOpen, setOpen] = useState(false);\n  const profile = useSelector(state => state.profile);\n  const dispatch = useDispatch(); // if (!currentUser) {\n  //   navigate(\"/login\");\n  // }\n\n  const inputRef = useRef({});\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    dispatch(getProfile());\n  }, []); // Handle input change for each input\n\n  function handleChangeModalForm(e) {\n    const value = e.target.value;\n    setStateModalForm({ ...stateModalForm,\n      [e.target.name]: value\n    });\n  }\n\n  function handleEdit(e) {\n    e.preventDefault();\n    dispatch(createProfile({\n      firstName: stateModalForm.inputFirstName,\n      lastName: stateModalForm.inputLastName,\n      location: stateModalForm.inputLocation,\n      contactNo: stateModalForm.inputContact,\n      aboutMe: stateModalForm.inputAbout\n    }));\n    setOpen(false);\n    setTimeout(() => {\n      dispatch(getProfile());\n    }, 1000);\n  }\n\n  useEffect(() => {\n    setStateModalForm({\n      inputFirstName: profile.firstName,\n      inputLastName: profile.lastName,\n      inputLocation: profile.location,\n      inputContact: profile.contactNo,\n      inputAbout: profile.aboutMe\n    });\n  }, [profile]);\n\n  function handleEditProfile(e) {\n    e.preventDefault();\n    dispatch(createProfile({\n      firstName: inputRef.current.inputFirstName.value,\n      lastName: inputRef.current.inputLastName.value,\n      location: inputRef.current.inputLocation.value,\n      contactNo: inputRef.current.inputContact.value,\n      aboutMe: inputRef.current.inputAbout.value\n    }));\n    setOpen(false);\n    setTimeout(() => {\n      dispatch(getProfile());\n    }, 1000);\n  }\n\n  if (currentUser && profile) {\n    profile.email = currentUser.email;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n      profile: profile,\n      modalToggler: () => setOpen(!isOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileDetails, {\n        profile: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfileModal, {\n        profile: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"6CBYPomT4A8JUNLClTu4oYrh0NU=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useDispatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useRef","useState","TextArea","TextInput","TextInputRef","TextAreaRef","PrimaryButton","useNavigate","useDispatch","useSelector","getProfile","createProfile","Modal","ProfileHeader","ProfileDetails","EditProfileModal","Profile","props","initialStateModalForm","inputFirstName","inputLastName","inputLocation","inputContact","inputAbout","stateModalForm","setStateModalForm","navigate","user","currentUser","state","auth","data","setData","isOpen","setOpen","profile","dispatch","inputRef","handleChangeModalForm","e","value","target","name","handleEdit","preventDefault","firstName","lastName","location","contactNo","aboutMe","setTimeout","handleEditProfile","current","email"],"sources":["/home/amol/Downloads/frontend/portfolio/src/pages/Profile/Profile.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { TextArea } from \"../../components/TextArea\";\nimport { TextInput } from \"../../components/TextInput\";\nimport { TextInputRef } from \"../../components/TextInputRef\";\nimport { TextAreaRef } from \"../../components/TextAreaRef\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport \"./Profile.css\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProfile, createProfile } from \"../../actions/profile\";\nimport { Modal } from \"../../components/Modal\";\nimport ProfileHeader from \"./components/ProfileHeader\";\nimport ProfileDetails from \"./components/ProfileDetails\";\nimport EditProfileModal from \"./components/EditProfileModal\";\n\nfunction Profile(props) {\n  const initialStateModalForm = {\n    inputFirstName: \"\",\n    inputLastName: \"\",\n    inputLocation: \"\",\n    inputContact: \"\",\n    inputAbout: \"\",\n  };\n  const [stateModalForm, setStateModalForm] = useState(initialStateModalForm);\n\n  let navigate = useNavigate();\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const [data, setData] = useState({});\n  const [isOpen, setOpen] = useState(false);\n\n  const profile = useSelector((state) => state.profile);\n  const dispatch = useDispatch();\n  // if (!currentUser) {\n  //   navigate(\"/login\");\n  // }\n\n  const inputRef = useRef({});\n\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    dispatch(getProfile());\n  }, []);\n  // Handle input change for each input\n\n  function handleChangeModalForm(e) {\n    const value = e.target.value;\n    setStateModalForm({\n      ...stateModalForm,\n      [e.target.name]: value,\n    });\n  }\n\n  function handleEdit(e) {\n    e.preventDefault();\n    dispatch(\n      createProfile({\n        firstName: stateModalForm.inputFirstName,\n        lastName: stateModalForm.inputLastName,\n        location: stateModalForm.inputLocation,\n        contactNo: stateModalForm.inputContact,\n        aboutMe: stateModalForm.inputAbout,\n      })\n    );\n    setOpen(false);\n    setTimeout(() => {\n      dispatch(getProfile());\n    }, 1000);\n  }\n\n  useEffect(() => {\n    setStateModalForm({\n      inputFirstName: profile.firstName,\n      inputLastName: profile.lastName,\n      inputLocation: profile.location,\n      inputContact: profile.contactNo,\n      inputAbout: profile.aboutMe,\n    });\n  }, [profile]);\n\n  function handleEditProfile(e) {\n    e.preventDefault();\n    dispatch(\n      createProfile({\n        firstName: inputRef.current.inputFirstName.value,\n        lastName: inputRef.current.inputLastName.value,\n        location: inputRef.current.inputLocation.value,\n        contactNo: inputRef.current.inputContact.value,\n        aboutMe: inputRef.current.inputAbout.value,\n      })\n    );\n    setOpen(false);\n    setTimeout(() => {\n      dispatch(getProfile());\n    }, 1000);\n  }\n\n  if (currentUser && profile) {\n    profile.email = currentUser.email;\n  }\n  return (\n    <div className=\"profile\">\n      <ProfileHeader profile={profile} modalToggler={() => setOpen(!isOpen)} />\n      <div className=\"profile-content\">\n        <ProfileDetails profile={profile} />\n        {/* <div className=\"\">\n          {isOpen && (\n            <>\n              <div className=\"modal-container\">\n                <Modal\n                  heading={\"Edit Profile\"}\n                  isOpen={isOpen}\n                  setOpen={setOpen}\n                >\n                  <form action=\"\">\n                    <TextInputRef\n                      type=\"text\"\n                      label=\"First Name\"\n                      name=\"inputFirstName\"\n                      value={profile.firstName}\n                      placeholder=\"Enter your first here\"\n                      ref={inputRef}\n                    />\n                    <TextInputRef\n                      type=\"text\"\n                      label=\"Last Name\"\n                      name=\"inputLastName\"\n                      value={stateModalForm.inputLastName}\n                      placeholder=\"Enter your last here\"\n                      ref={inputRef}\n                    />\n                    <TextInputRef\n                      type=\"text\"\n                      label=\"Location\"\n                      name=\"inputLocation\"\n                      value={stateModalForm.inputLocation}\n                      placeholder=\"Enter your location here\"\n                      ref={inputRef}\n                    />\n\n                    <TextInputRef\n                      type=\"text\"\n                      label=\"Contact\"\n                      name=\"inputContact\"\n                      value={stateModalForm.inputContact}\n                      placeholder=\"Enter your contact here\"\n                      ref={inputRef}\n                    />\n                    <TextAreaRef\n                      label=\"About Me\"\n                      name=\"inputAbout\"\n                      value={stateModalForm.inputAbout}\n                      placeholder=\"Tell us about yourself\"\n                      ref={inputRef}\n                    />\n                    <PrimaryButton onClick={handleEditProfile}>\n                      Save\n                    </PrimaryButton>\n                  </form>\n                </Modal>\n              </div>\n            </>\n          )}\n        </div> */}\n        <EditProfileModal profile={profile}  />\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}