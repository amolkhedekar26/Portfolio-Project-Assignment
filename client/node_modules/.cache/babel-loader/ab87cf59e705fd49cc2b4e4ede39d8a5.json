{"ast":null,"code":"var _jsxFileName = \"/home/amol/Downloads/frontend/portfolio/src/pages/Skills/Skills.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { SearchInput } from \"../../components/SearchInput\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport \"./Skills.css\";\nimport PrimaryButtonWithIcon from \"../../components/PrimaryButtonWithIcon/PrimaryButtonWithIcon\";\nimport ReactStars from \"react-rating-stars-component\";\nimport EmptyStarIcon from \"../../assets/icons/star_outline.svg\";\nimport FullStarIcon from \"../../assets/icons/star_filled.svg\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSkills, createSkill } from \"../../actions/skills\";\nimport { Modal } from \"../../components/Modal\";\nimport { TextInputRef } from \"../../components/TextInputRef\";\nimport SkillsList from \"./SkillsList\";\nimport SkillsHeader from \"./components/SkillsHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Skills(props) {\n  _s();\n\n  const initialState = {\n    inputSearch: \"\"\n  };\n  const initialStateModalForm = {\n    inputSkillLevel: 0\n  };\n  let navigate = useNavigate();\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const [state, setState] = useState(initialState);\n  const [stateModalForm, setStateModalForm] = useState(initialStateModalForm);\n  const [isOpen, setOpen] = useState(false);\n  const [data, setData] = useState({});\n  const skills = useSelector(state => state.skills);\n  const dispatch = useDispatch();\n  const inputRef = useRef({});\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    dispatch(getSkills());\n  }, []);\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  }; // function handleChangeModalForm(e) {\n  //   const value = e.target.value;\n  //   setStateModalForm({\n  //     ...stateModalForm,\n  //     [e.target.name]: value,\n  //   });\n  // }\n\n\n  const levelChanged = newLevel => {\n    setStateModalForm({ ...stateModalForm,\n      inputSkillLevel: newLevel\n    });\n  };\n\n  function handleSave(e) {\n    e.preventDefault();\n    dispatch(createSkill({\n      skill: {\n        name: inputRef.current.inputSkillName.value,\n        level: stateModalForm.inputSkillLevel\n      }\n    }));\n    setStateModalForm({\n      inputSkillLevel: 0\n    });\n    setTimeout(() => {\n      dispatch(getSkills());\n    }, 1000);\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    if (skills) {\n      setData(skills);\n    }\n  }, [skills]);\n  let skillsContent = null;\n\n  if (skills.length > 0) {\n    console.log(skills); // skillsContent = skills.map((skill) => {\n    //   return (\n    //     <SkillCard key={skill.id} skillName={skill.name} level={skill.level} />\n    //   );\n    // });\n\n    skillsContent = /*#__PURE__*/_jsxDEV(SkillsList, {\n      skills: skills\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this);\n  } else {\n    skillsContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skills\",\n    children: [/*#__PURE__*/_jsxDEV(SkillsHeader, {\n      modalToggler: () => setOpen(!isOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: isOpen && skills && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-container\",\n          children: /*#__PURE__*/_jsxDEV(Modal, {\n            heading: \"Add Skill\",\n            isOpen: isOpen,\n            setOpen: setOpen,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              children: [/*#__PURE__*/_jsxDEV(TextInputRef, {\n                type: \"text\",\n                label: \"Skill Name\",\n                name: \"inputSkillName\",\n                value: \"\",\n                placeholder: \"Enter your skill here\",\n                ref: inputRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"skill-level-label\",\n                children: \"Skill Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n                count: 5,\n                onChange: levelChanged,\n                size: 36,\n                emptyIcon: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: EmptyStarIcon,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 32\n                }, this),\n                filledIcon: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: FullStarIcon,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 33\n                }, this),\n                activeColor: \"#D83A52\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n                onClick: handleSave,\n                children: \" Save \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Skills, \"SGVxH1mCjFsgkWUucT4ANxiHJso=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useDispatch];\n});\n\n_c = Skills;\nexport default Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SearchInput","PrimaryButton","PrimaryButtonWithIcon","ReactStars","EmptyStarIcon","FullStarIcon","useNavigate","useDispatch","useSelector","getSkills","createSkill","Modal","TextInputRef","SkillsList","SkillsHeader","Skills","props","initialState","inputSearch","initialStateModalForm","inputSkillLevel","navigate","user","currentUser","state","auth","setState","stateModalForm","setStateModalForm","isOpen","setOpen","data","setData","skills","dispatch","inputRef","handleChange","e","target","name","value","levelChanged","newLevel","handleSave","preventDefault","skill","current","inputSkillName","level","setTimeout","skillsContent","length","console","log"],"sources":["/home/amol/Downloads/frontend/portfolio/src/pages/Skills/Skills.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { SearchInput } from \"../../components/SearchInput\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport \"./Skills.css\";\nimport PrimaryButtonWithIcon from \"../../components/PrimaryButtonWithIcon/PrimaryButtonWithIcon\";\nimport ReactStars from \"react-rating-stars-component\";\nimport EmptyStarIcon from \"../../assets/icons/star_outline.svg\";\nimport FullStarIcon from \"../../assets/icons/star_filled.svg\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSkills, createSkill } from \"../../actions/skills\";\n\nimport { Modal } from \"../../components/Modal\";\nimport { TextInputRef } from \"../../components/TextInputRef\";\nimport SkillsList from \"./SkillsList\";\nimport SkillsHeader from \"./components/SkillsHeader\";\n\nfunction Skills(props) {\n  const initialState = {\n    inputSearch: \"\",\n  };\n\n  const initialStateModalForm = {\n    inputSkillLevel: 0,\n  };\n\n  let navigate = useNavigate();\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const [state, setState] = useState(initialState);\n  const [stateModalForm, setStateModalForm] = useState(initialStateModalForm);\n  const [isOpen, setOpen] = useState(false);\n\n  const [data, setData] = useState({});\n\n  const skills = useSelector((state) => state.skills);\n  const dispatch = useDispatch();\n\n  const inputRef = useRef({});\n\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    dispatch(getSkills());\n  }, []);\n\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // function handleChangeModalForm(e) {\n  //   const value = e.target.value;\n  //   setStateModalForm({\n  //     ...stateModalForm,\n  //     [e.target.name]: value,\n  //   });\n  // }\n\n  const levelChanged = (newLevel) => {\n    setStateModalForm({\n      ...stateModalForm,\n      inputSkillLevel: newLevel,\n    });\n  };\n\n  function handleSave(e) {\n    e.preventDefault();\n    dispatch(\n      createSkill({\n        skill: {\n          name: inputRef.current.inputSkillName.value,\n          level: stateModalForm.inputSkillLevel,\n        },\n      })\n    );\n    setStateModalForm({\n      inputSkillLevel: 0,\n    });\n    setTimeout(() => {\n      dispatch(getSkills());\n    }, 1000);\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    if (skills) {\n      setData(skills);\n    }\n  }, [skills]);\n\n  let skillsContent = null;\n  if (skills.length > 0) {\n    console.log(skills);\n    // skillsContent = skills.map((skill) => {\n    //   return (\n    //     <SkillCard key={skill.id} skillName={skill.name} level={skill.level} />\n    //   );\n    // });\n    skillsContent = <SkillsList skills={skills} />;\n  } else {\n    skillsContent = <div>Loading ...</div>;\n  }\n\n  return (\n    <div className=\"skills\">\n      <SkillsHeader modalToggler={() => setOpen(!isOpen)} />\n      {/* <section className=\"skills-content\">{skillsContent}</section> */}\n      \n      <div className=\"\">\n        {isOpen && skills && (\n          <>\n            <div className=\"modal-container\">\n              <Modal heading={\"Add Skill\"} isOpen={isOpen} setOpen={setOpen}>\n                <form action=\"\">\n                  <TextInputRef\n                    type=\"text\"\n                    label=\"Skill Name\"\n                    name=\"inputSkillName\"\n                    value={\"\"}\n                    placeholder=\"Enter your skill here\"\n                    ref={inputRef}\n                  />\n                  <label htmlFor=\"\" className=\"skill-level-label\">\n                    Skill Level\n                  </label>\n                  <ReactStars\n                    count={5}\n                    onChange={levelChanged}\n                    size={36}\n                    emptyIcon={<img src={EmptyStarIcon} alt=\"\" />}\n                    filledIcon={<img src={FullStarIcon} alt=\"\" />}\n                    activeColor=\"#D83A52\"\n                  />\n                  {/* {stateModalForm.inputSkillLevel > 0 &&\n                    stateModalForm.inputSkillName.length > 0 && (\n                      <PrimaryButton onClick={handleSave}> Save </PrimaryButton>\n                    )} */}\n                  <PrimaryButton onClick={handleSave}> Save </PrimaryButton>\n                </form>\n              </Modal>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Skills;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}