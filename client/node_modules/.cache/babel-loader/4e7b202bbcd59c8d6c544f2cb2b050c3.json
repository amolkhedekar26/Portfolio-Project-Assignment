{"ast":null,"code":"var _jsxFileName = \"/home/amol/Downloads/frontend/portfolio/src/pages/Projects/Projects.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PrimaryButtonWithIcon from \"../../components/PrimaryButtonWithIcon/PrimaryButtonWithIcon\";\nimport { SearchInput } from \"../../components/SearchInput\";\nimport PlusIcon from \"../../assets/icons/plus.svg\";\nimport \"./Projects.css\";\nimport ProjectCard from \"../../components/ProjectCard/ProjectCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjects, createProject } from \"../../actions/projects\";\nimport { Modal } from \"../../components/Modal\";\nimport { TextInput } from \"../../components/TextInput\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Projects(props) {\n  _s();\n\n  const initialState = {\n    inputSearch: \"\"\n  };\n  const initialStateModalForm = {\n    inputProjectName: \"\",\n    inputProjectDescription: \"\",\n    inputProjectSkills: []\n  };\n  let navigate = useNavigate();\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const [state, setState] = useState(initialState);\n  const [stateModalForm, setStateModalForm] = useState(initialStateModalForm);\n  const [isOpen, setOpen] = useState(false);\n  const [data, setData] = useState({});\n  const [userSkills, setUserSkills] = useState([]);\n  const sample = [\"HTML\", \"CSS\", \"JavaScript\", \"React\", \"NodeJS\", \"Express\"];\n  const projects = useSelector(state => state.projects);\n  const skills = useSelector(state => state.skills);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    dispatch(getProjects());\n    dispatch(getSkills());\n  }, []);\n  useEffect(() => {\n    if (skills) {\n      setUserSkills(skills);\n    }\n  }, [skills]);\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  function handleChangeModalForm(e) {\n    const value = e.target.value;\n    setStateModalForm({ ...stateModalForm,\n      [e.target.name]: value\n    });\n  }\n\n  useEffect(() => {\n    if (projects.length > 0) {\n      setData(projects);\n    }\n  }, [projects]);\n  let projectsContent = null;\n\n  if (projects.length > 0) {\n    console.log(projects);\n    projectsContent = projects.map(project => {\n      return /*#__PURE__*/_jsxDEV(ProjectCard, {\n        projectName: project.name,\n        projectDescription: project.description,\n        projectSkills: project.skills\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    projectsContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }, this);\n  }\n\n  let skillsNames = [];\n\n  if (skills.length > 0) {\n    console.log(skills);\n    skillsNames = skills.map(skill => {\n      return skill.name;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"projects-header\",\n      children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n        name: \"inputSearch\",\n        value: state.inputSearch,\n        placeholder: \"Search for projects\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButtonWithIcon, {\n        icon: PlusIcon,\n        onClick: () => setOpen(!isOpen),\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"projects-content\",\n      children: projectsContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: isOpen && projects && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-container\",\n          children: /*#__PURE__*/_jsxDEV(Modal, {\n            heading: \"Add Project\",\n            isOpen: isOpen,\n            setOpen: setOpen,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              children: [/*#__PURE__*/_jsxDEV(TextInput, {\n                type: \"text\",\n                label: \"Project Name\",\n                name: \"inputProjectName\",\n                value: stateModalForm.inputProjectName,\n                placeholder: \"Enter your project name here\",\n                onChange: handleChangeModalForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                type: \"text\",\n                label: \"Project Description\",\n                name: \"inputProjectDescription\",\n                value: stateModalForm.inputProjectDescription,\n                placeholder: \"Enter your project description here\",\n                onChange: handleChangeModalForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n                options: skillsNames // Options to display in the dropdown\n                ,\n                selectedValues: \"\" // Preselected value to persist in dropdown\n                ,\n                onSelect: () => {} // Function will trigger on select event\n                ,\n                onRemove: () => {} // Function will trigger on remove event\n                ,\n                isObject: false,\n                placeholder: \"Select your project skills\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), stateModalForm.inputProjectName.length > 0 && stateModalForm.inputProjectDescription.length > 0 && /*#__PURE__*/_jsxDEV(PrimaryButton, {\n                onClick: () => {},\n                children: \" Save \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Projects, \"J/Wgvz62QR8s3jiWGm7CqZlJHZw=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","PrimaryButtonWithIcon","SearchInput","PlusIcon","ProjectCard","useNavigate","useDispatch","useSelector","getProjects","createProject","Modal","TextInput","PrimaryButton","Multiselect","Projects","props","initialState","inputSearch","initialStateModalForm","inputProjectName","inputProjectDescription","inputProjectSkills","navigate","user","currentUser","state","auth","setState","stateModalForm","setStateModalForm","isOpen","setOpen","data","setData","userSkills","setUserSkills","sample","projects","skills","dispatch","getSkills","handleChange","e","target","name","value","handleChangeModalForm","length","projectsContent","console","log","map","project","description","id","skillsNames","skill"],"sources":["/home/amol/Downloads/frontend/portfolio/src/pages/Projects/Projects.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PrimaryButtonWithIcon from \"../../components/PrimaryButtonWithIcon/PrimaryButtonWithIcon\";\nimport { SearchInput } from \"../../components/SearchInput\";\nimport PlusIcon from \"../../assets/icons/plus.svg\";\nimport \"./Projects.css\";\nimport ProjectCard from \"../../components/ProjectCard/ProjectCard\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjects, createProject } from \"../../actions/projects\";\n\nimport { Modal } from \"../../components/Modal\";\nimport { TextInput } from \"../../components/TextInput\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport Multiselect from \"multiselect-react-dropdown\";\n\nfunction Projects(props) {\n  const initialState = {\n    inputSearch: \"\",\n  };\n\n  const initialStateModalForm = {\n    inputProjectName: \"\",\n    inputProjectDescription: \"\",\n    inputProjectSkills: [],\n  };\n\n  let navigate = useNavigate();\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const [state, setState] = useState(initialState);\n  const [stateModalForm, setStateModalForm] = useState(initialStateModalForm);\n  const [isOpen, setOpen] = useState(false);\n\n  const [data, setData] = useState({});\n  const [userSkills, setUserSkills] = useState([]);\n\n  const sample = [\"HTML\", \"CSS\", \"JavaScript\", \"React\", \"NodeJS\", \"Express\"];\n  const projects = useSelector((state) => state.projects);\n  const skills = useSelector((state) => state.skills);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    dispatch(getProjects());\n    dispatch(getSkills());\n  }, []);\n\n  useEffect(() => {\n    if (skills) {\n      setUserSkills(skills);\n    }\n  }, [skills]);\n\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  function handleChangeModalForm(e) {\n    const value = e.target.value;\n    setStateModalForm({\n      ...stateModalForm,\n      [e.target.name]: value,\n    });\n  }\n\n  useEffect(() => {\n    if (projects.length > 0) {\n      setData(projects);\n    }\n  }, [projects]);\n\n  let projectsContent = null;\n  if (projects.length > 0) {\n    console.log(projects);\n    projectsContent = projects.map((project) => {\n      return (\n        <ProjectCard\n          key={project.id}\n          projectName={project.name}\n          projectDescription={project.description}\n          projectSkills={project.skills}\n        />\n      );\n    });\n  } else {\n    projectsContent = <div>Loading ...</div>;\n  }\n  let skillsNames= [];\n  if (skills.length > 0) {\n    console.log(skills);\n    skillsNames = skills.map((skill) => {\n      return skill.name;\n    });\n  }\n  return (\n    <div className=\"projects\">\n      <header className=\"projects-header\">\n        <SearchInput\n          name=\"inputSearch\"\n          value={state.inputSearch}\n          placeholder=\"Search for projects\"\n          onChange={handleChange}\n        />\n        <PrimaryButtonWithIcon icon={PlusIcon} onClick={() => setOpen(!isOpen)}>\n          Add Project\n        </PrimaryButtonWithIcon>\n      </header>\n      <section className=\"projects-content\">{projectsContent}</section>\n      <div className=\"\">\n        {isOpen && projects && (\n          <>\n            <div className=\"modal-container\">\n              <Modal heading={\"Add Project\"} isOpen={isOpen} setOpen={setOpen}>\n                <form action=\"\">\n                  <TextInput\n                    type=\"text\"\n                    label=\"Project Name\"\n                    name=\"inputProjectName\"\n                    value={stateModalForm.inputProjectName}\n                    placeholder=\"Enter your project name here\"\n                    onChange={handleChangeModalForm}\n                  />\n                  <TextInput\n                    type=\"text\"\n                    label=\"Project Description\"\n                    name=\"inputProjectDescription\"\n                    value={stateModalForm.inputProjectDescription}\n                    placeholder=\"Enter your project description here\"\n                    onChange={handleChangeModalForm}\n                  />\n                  <Multiselect\n                    options={skillsNames} // Options to display in the dropdown\n                    selectedValues={\"\"} // Preselected value to persist in dropdown\n                    onSelect={() => {}} // Function will trigger on select event\n                    onRemove={() => {}} // Function will trigger on remove event\n                    isObject={false}\n                    placeholder=\"Select your project skills\"\n                  />\n\n                  {stateModalForm.inputProjectName.length > 0 &&\n                    stateModalForm.inputProjectDescription.length > 0 && (\n                      <PrimaryButton onClick={() => {}}> Save </PrimaryButton>\n                    )}\n                </form>\n              </Modal>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}