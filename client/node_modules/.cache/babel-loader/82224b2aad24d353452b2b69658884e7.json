{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\nimport AuthService from \"../services/auth.service\"; // import { notify } from \"../utils/toast\";\n\nexport const register = (email, password) => dispatch => {\n  return AuthService.register(email, password, notify).then(data => {\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n\n    if (!data.success) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: data.message\n      });\n      notify(data.message, \"error\");\n      return Promise.reject();\n    }\n\n    console.log(data);\n    notify(data.message, \"success\");\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    return Promise.reject();\n  });\n};\nexport const login = (email, password, setHasError, notify) => dispatch => {\n  return AuthService.login(email, password).then(data => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        user: data.data\n      }\n    });\n\n    if (!data.success) {\n      if (data.status === 404 || data.status === 422) {\n        notify(data.message, \"error\");\n      } else if (data.status === 401) {\n        setHasError(true);\n      }\n\n      return Promise.reject();\n    }\n\n    notify(data.message, \"success\");\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    return Promise.reject();\n  });\n};\nexport const logout = () => dispatch => {\n  AuthService.logout();\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AuthService","register","email","password","dispatch","notify","then","data","type","success","payload","message","Promise","reject","console","log","resolve","error","login","setHasError","user","status","logout"],"sources":["/home/amol/Submit On/client/src/actions/auth.js"],"sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n// import { notify } from \"../utils/toast\";\n\nexport const register = (email, password) => (dispatch) => {\n  return AuthService.register(email, password, notify).then(\n    (data) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      if (!data.success) {\n        dispatch({\n          type: REGISTER_FAIL,\n          payload: data.message,\n        });\n        notify(data.message, \"error\");\n        return Promise.reject();\n      }\n      console.log(data);\n      notify(data.message, \"success\");\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (email, password, setHasError, notify) => (dispatch) => {\n  return AuthService.login(email, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data.data },\n      });\n\n      if (!data.success) {\n        if (data.status === 404 || data.status === 422) {\n          notify(data.message, \"error\");\n        } else if (data.status === 401) {\n          setHasError(true);\n        }\n        return Promise.reject();\n      }\n      notify(data.message, \"success\");\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,QAMO,SANP;AAQA,OAAOC,WAAP,MAAwB,0BAAxB,C,CACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAsBC,QAAD,IAAc;EACzD,OAAOJ,WAAW,CAACC,QAAZ,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCE,MAAtC,EAA8CC,IAA9C,CACJC,IAAD,IAAU;IACRH,QAAQ,CAAC;MACPI,IAAI,EAAEb;IADC,CAAD,CAAR;;IAIA,IAAI,CAACY,IAAI,CAACE,OAAV,EAAmB;MACjBL,QAAQ,CAAC;QACPI,IAAI,EAAEZ,aADC;QAEPc,OAAO,EAAEH,IAAI,CAACI;MAFP,CAAD,CAAR;MAIAN,MAAM,CAACE,IAAI,CAACI,OAAN,EAAe,OAAf,CAAN;MACA,OAAOC,OAAO,CAACC,MAAR,EAAP;IACD;;IACDC,OAAO,CAACC,GAAR,CAAYR,IAAZ;IACAF,MAAM,CAACE,IAAI,CAACI,OAAN,EAAe,SAAf,CAAN;IACA,OAAOC,OAAO,CAACI,OAAR,EAAP;EACD,CAjBI,EAkBJC,KAAD,IAAW;IACTb,QAAQ,CAAC;MACPI,IAAI,EAAEZ;IADC,CAAD,CAAR;IAGA,OAAOgB,OAAO,CAACC,MAAR,EAAP;EACD,CAvBI,CAAP;AAyBD,CA1BM;AA4BP,OAAO,MAAMK,KAAK,GAAG,CAAChB,KAAD,EAAQC,QAAR,EAAkBgB,WAAlB,EAA+Bd,MAA/B,KAA2CD,QAAD,IAAc;EAC3E,OAAOJ,WAAW,CAACkB,KAAZ,CAAkBhB,KAAlB,EAAyBC,QAAzB,EAAmCG,IAAnC,CACJC,IAAD,IAAU;IACRH,QAAQ,CAAC;MACPI,IAAI,EAAEX,aADC;MAEPa,OAAO,EAAE;QAAEU,IAAI,EAAEb,IAAI,CAACA;MAAb;IAFF,CAAD,CAAR;;IAKA,IAAI,CAACA,IAAI,CAACE,OAAV,EAAmB;MACjB,IAAIF,IAAI,CAACc,MAAL,KAAgB,GAAhB,IAAuBd,IAAI,CAACc,MAAL,KAAgB,GAA3C,EAAgD;QAC9ChB,MAAM,CAACE,IAAI,CAACI,OAAN,EAAe,OAAf,CAAN;MACD,CAFD,MAEO,IAAIJ,IAAI,CAACc,MAAL,KAAgB,GAApB,EAAyB;QAC9BF,WAAW,CAAC,IAAD,CAAX;MACD;;MACD,OAAOP,OAAO,CAACC,MAAR,EAAP;IACD;;IACDR,MAAM,CAACE,IAAI,CAACI,OAAN,EAAe,SAAf,CAAN;IACA,OAAOC,OAAO,CAACI,OAAR,EAAP;EACD,CAjBI,EAkBJC,KAAD,IAAW;IACTb,QAAQ,CAAC;MACPI,IAAI,EAAEV;IADC,CAAD,CAAR;IAIA,OAAOc,OAAO,CAACC,MAAR,EAAP;EACD,CAxBI,CAAP;AA0BD,CA3BM;AA6BP,OAAO,MAAMS,MAAM,GAAG,MAAOlB,QAAD,IAAc;EACxCJ,WAAW,CAACsB,MAAZ;EAEAlB,QAAQ,CAAC;IACPI,IAAI,EAAET;EADC,CAAD,CAAR;AAGD,CANM"},"metadata":{},"sourceType":"module"}