{"ast":null,"code":"const checkEmail = email => {\n  return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n};\n\nconst checkPassword = password => {\n  return String(password).toLowerCase().match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/);\n};\n\nconst validate = (email, password, notify) => {\n  if (!email || email === \"\") {\n    notify(\"Email is required\", \"error\");\n    return false;\n  }\n\n  if (!checkEmail(email)) {\n    notify(\"Email is invalid\", \"error\");\n    return false;\n  }\n\n  if (!password || password === \"\") {\n    notify(\"Password is required\", \"error\");\n    return false;\n  }\n\n  if (!checkPassword(password)) {\n    notify(\"Password should follow defined pattern\", \"error\");\n    return false;\n  }\n\n  return true;\n};\n\nexport default validate;","map":{"version":3,"names":["checkEmail","email","String","toLowerCase","match","checkPassword","password","validate","notify"],"sources":["/home/amol/Downloads/frontend/portfolio/src/validation/SignIn.js"],"sourcesContent":["const checkEmail = (email) => {\n  return String(email)\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n};\n\nconst checkPassword = (password) => {\n  return String(password)\n    .toLowerCase()\n    .match(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n    );\n};\n\nconst validate = (email, password, notify) => {\n  if (!email || email === \"\") {\n    notify(\"Email is required\", \"error\");\n    return false;\n  }\n  if (!checkEmail(email)) {\n    notify(\"Email is invalid\", \"error\");\n    return false;\n  }\n  if (!password || password === \"\") {\n    notify(\"Password is required\", \"error\");\n    return false;\n  }\n  if (!checkPassword(password)) {\n    notify(\"Password should follow defined pattern\", \"error\");\n    return false;\n  }\n  return true;\n};\n\nexport default validate;\n"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,KAAD,IAAW;EAC5B,OAAOC,MAAM,CAACD,KAAD,CAAN,CACJE,WADI,GAEJC,KAFI,CAGH,uJAHG,CAAP;AAKD,CAND;;AAQA,MAAMC,aAAa,GAAIC,QAAD,IAAc;EAClC,OAAOJ,MAAM,CAACI,QAAD,CAAN,CACJH,WADI,GAEJC,KAFI,CAGH,sEAHG,CAAP;AAKD,CAND;;AAQA,MAAMG,QAAQ,GAAG,CAACN,KAAD,EAAQK,QAAR,EAAkBE,MAAlB,KAA6B;EAC5C,IAAI,CAACP,KAAD,IAAUA,KAAK,KAAK,EAAxB,EAA4B;IAC1BO,MAAM,CAAC,mBAAD,EAAsB,OAAtB,CAAN;IACA,OAAO,KAAP;EACD;;EACD,IAAI,CAACR,UAAU,CAACC,KAAD,CAAf,EAAwB;IACtBO,MAAM,CAAC,kBAAD,EAAqB,OAArB,CAAN;IACA,OAAO,KAAP;EACD;;EACD,IAAI,CAACF,QAAD,IAAaA,QAAQ,KAAK,EAA9B,EAAkC;IAChCE,MAAM,CAAC,sBAAD,EAAyB,OAAzB,CAAN;IACA,OAAO,KAAP;EACD;;EACD,IAAI,CAACH,aAAa,CAACC,QAAD,CAAlB,EAA8B;IAC5BE,MAAM,CAAC,wCAAD,EAA2C,OAA3C,CAAN;IACA,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD,CAlBD;;AAoBA,eAAeD,QAAf"},"metadata":{},"sourceType":"module"}