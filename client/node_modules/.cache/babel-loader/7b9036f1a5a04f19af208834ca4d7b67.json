{"ast":null,"code":"var _jsxFileName = \"/home/amol/Downloads/frontend/portfolio/src/pages/Profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { TextArea } from \"../../components/TextArea\";\nimport { TextInput } from \"../../components/TextInput\";\nimport { TextInputRef } from \"../../components/TextInputRef\";\nimport { TextAreaRef } from \"../../components/TextAreaRef\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport \"./Profile.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProfile, createProfile } from \"../../actions/profile\";\nimport { Modal } from \"../../components/Modal\";\nimport ProfileHeader from \"./components/ProfileHeader\";\nimport ProfileDetails from \"./components/ProfileDetails\";\nimport EditProfileModal from \"./components/EditProfileModal\";\nimport ProfileContent from \"./components/ProfileContent\";\nimport ProfileContainer from \"./components/ProfileContainer\";\nimport { ToastContainer, notify } from \"../../utils/toast\";\nimport ProfileValidator from \"../../validation/Profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile(props) {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const defaultProfile = {\n    firstName: \"First Name\",\n    lastName: \"Last Name\",\n    location: \"Your Location\",\n    contactNo: \"xxxxxxxxxx\",\n    aboutMe: \"Your Bio\",\n    initials: \"FL\",\n    email: currentUser.email\n  };\n  const [isOpen, setOpen] = useState(false);\n  const [profileData, setProfileData] = useState(defaultProfile);\n  const profile = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n  const inputRef = useRef({});\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    dispatch(getProfile());\n  }, []);\n\n  const trimData = data => {\n    const {\n      firstName,\n      lastName,\n      location,\n      contactNo,\n      aboutMe\n    } = data;\n    return {\n      firstName: firstName.trim(),\n      lastName: lastName.trim(),\n      location: location.trim(),\n      contactNo: contactNo.trim(),\n      aboutMe: aboutMe.trim()\n    };\n  }; // Handle submit for modal form\n\n\n  function handleEditProfile(e) {\n    e.preventDefault();\n    const reqBody = {\n      firstName: inputRef.current.inputFirstName.value,\n      lastName: inputRef.current.inputLastName.value,\n      location: inputRef.current.inputLocation.value,\n      contactNo: inputRef.current.inputContact.value,\n      aboutMe: inputRef.current.inputAbout.value\n    };\n    const trimmedData = trimData(reqBody);\n    const isValid = ProfileValidator.validate(trimmedData, notify);\n\n    if (isValid) {\n      dispatch(createProfile(trimmedData));\n      setOpen(false);\n      setTimeout(() => {\n        dispatch(getProfile());\n      }, 1000);\n    } // dispatch(\n    //   createProfile({\n    //     firstName: inputRef.current.inputFirstName.value,\n    //     lastName: inputRef.current.inputLastName.value,\n    //     location: inputRef.current.inputLocation.value,\n    //     contactNo: inputRef.current.inputContact.value,\n    //     aboutMe: inputRef.current.inputAbout.value,\n    //   })\n    // );\n    // setOpen(false);\n    // setTimeout(() => {\n    //   dispatch(getProfile());\n    // }, 1000);\n\n  }\n\n  useEffect(() => {}, [profile]);\n\n  if (currentUser && profile) {\n    profile.email = currentUser.email;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProfileContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n      profile: profile ? profile : defaultProfile,\n      modalToggler: () => setOpen(!isOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileContent, {\n      children: [/*#__PURE__*/_jsxDEV(ProfileDetails, {\n        profile: profile ? profile : defaultProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfileModal, {\n        profile: profile ? profile : defaultProfile,\n        isOpen: isOpen,\n        setOpen: setOpen,\n        inputRef: inputRef,\n        handleEditProfile: handleEditProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"hH/pPWKpiDHXCl73JnoVQHJMmy8=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useDispatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useRef","useState","TextArea","TextInput","TextInputRef","TextAreaRef","PrimaryButton","useNavigate","useDispatch","useSelector","getProfile","createProfile","Modal","ProfileHeader","ProfileDetails","EditProfileModal","ProfileContent","ProfileContainer","ToastContainer","notify","ProfileValidator","Profile","props","navigate","user","currentUser","state","auth","defaultProfile","firstName","lastName","location","contactNo","aboutMe","initials","email","isOpen","setOpen","profileData","setProfileData","profile","dispatch","inputRef","trimData","data","trim","handleEditProfile","e","preventDefault","reqBody","current","inputFirstName","value","inputLastName","inputLocation","inputContact","inputAbout","trimmedData","isValid","validate","setTimeout"],"sources":["/home/amol/Downloads/frontend/portfolio/src/pages/Profile/Profile.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { TextArea } from \"../../components/TextArea\";\nimport { TextInput } from \"../../components/TextInput\";\nimport { TextInputRef } from \"../../components/TextInputRef\";\nimport { TextAreaRef } from \"../../components/TextAreaRef\";\nimport { PrimaryButton } from \"../../components/PrimaryButton\";\nimport \"./Profile.css\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProfile, createProfile } from \"../../actions/profile\";\nimport { Modal } from \"../../components/Modal\";\nimport ProfileHeader from \"./components/ProfileHeader\";\nimport ProfileDetails from \"./components/ProfileDetails\";\nimport EditProfileModal from \"./components/EditProfileModal\";\nimport ProfileContent from \"./components/ProfileContent\";\nimport ProfileContainer from \"./components/ProfileContainer\";\n\nimport { ToastContainer, notify } from \"../../utils/toast\";\nimport ProfileValidator from \"../../validation/Profile\";\n\nfunction Profile(props) {\n  let navigate = useNavigate();\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const defaultProfile = {\n    firstName: \"First Name\",\n    lastName: \"Last Name\",\n    location: \"Your Location\",\n    contactNo: \"xxxxxxxxxx\",\n    aboutMe: \"Your Bio\",\n    initials: \"FL\",\n    email: currentUser.email,\n  };\n\n  const [isOpen, setOpen] = useState(false);\n\n  const [profileData, setProfileData] = useState(defaultProfile);\n\n  const profile = useSelector((state) => state.profile);\n  const dispatch = useDispatch();\n\n  const inputRef = useRef({});\n\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    dispatch(getProfile());\n  }, []);\n\n  const trimData = (data) => {\n    const { firstName, lastName, location, contactNo, aboutMe } = data;\n    return {\n      firstName: firstName.trim(),\n      lastName: lastName.trim(),\n      location: location.trim(),\n      contactNo: contactNo.trim(),\n      aboutMe: aboutMe.trim(),\n    };\n  };\n\n  // Handle submit for modal form\n  function handleEditProfile(e) {\n    e.preventDefault();\n    const reqBody = {\n      firstName: inputRef.current.inputFirstName.value,\n      lastName: inputRef.current.inputLastName.value,\n      location: inputRef.current.inputLocation.value,\n      contactNo: inputRef.current.inputContact.value,\n      aboutMe: inputRef.current.inputAbout.value,\n    };\n    const trimmedData = trimData(reqBody);\n    const isValid = ProfileValidator.validate(trimmedData, notify);\n    if (isValid) {\n      dispatch(createProfile(trimmedData));\n      setOpen(false);\n      setTimeout(() => {\n        dispatch(getProfile());\n      }, 1000);\n    }\n    // dispatch(\n    //   createProfile({\n    //     firstName: inputRef.current.inputFirstName.value,\n    //     lastName: inputRef.current.inputLastName.value,\n    //     location: inputRef.current.inputLocation.value,\n    //     contactNo: inputRef.current.inputContact.value,\n    //     aboutMe: inputRef.current.inputAbout.value,\n    //   })\n    // );\n    // setOpen(false);\n    // setTimeout(() => {\n    //   dispatch(getProfile());\n    // }, 1000);\n  }\n\n  useEffect(() => {}, [profile]);\n\n  if (currentUser && profile) {\n    profile.email = currentUser.email;\n  }\n  return (\n    <ProfileContainer>\n      <ProfileHeader\n        profile={profile ? profile : defaultProfile}\n        modalToggler={() => setOpen(!isOpen)}\n      />\n      <ProfileContent>\n        <ProfileDetails profile={profile ? profile : defaultProfile} />\n        <EditProfileModal\n          profile={profile ? profile : defaultProfile}\n          isOpen={isOpen}\n          setOpen={setOpen}\n          inputRef={inputRef}\n          handleEditProfile={handleEditProfile}\n        />\n        <ToastContainer />\n      </ProfileContent>\n    </ProfileContainer>\n  );\n}\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}