{"ast":null,"code":"var _jsxFileName = \"/home/amol/Submit On/client/src/pages/Skills/Skills.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSkills, createSkill } from \"../../actions/skills\";\nimport SkillsHeader from \"./components/SkillsHeader\";\nimport SkillsContent from \"./components/SkillsContent\";\nimport SkillsListHoler from \"./components/SkillsListHoler\";\nimport AddSkillModal from \"./components/AddSkillModal\";\nimport SkillsContainer from \"./components/SkillsContainer\";\nimport \"./Skills.css\";\nimport { ToastContainer, notify } from \"../../utils/toast\";\nimport SkillsValidator from \"../../validation/Skills\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Skills(props) {\n  _s();\n\n  const initialStateModalForm = {\n    inputSkillLevel: 0\n  };\n  let navigate = useNavigate();\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const [stateModalForm, setStateModalForm] = useState(initialStateModalForm);\n  const [isOpen, setOpen] = useState(false);\n  const skills = useSelector(state => state.skills);\n  const dispatch = useDispatch();\n  const inputRef = useRef({});\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    dispatch(getSkills());\n  }, []);\n\n  const levelChanged = newLevel => {\n    setStateModalForm({ ...stateModalForm,\n      inputSkillLevel: newLevel\n    });\n  };\n\n  const trimData = data => {\n    return {\n      name: data.name.trim()\n    };\n  };\n\n  function handleSave(e) {\n    e.preventDefault();\n    const reqBody = {\n      name: inputRef.current.inputSkillName.value\n    };\n    let trimmedData = trimData(reqBody);\n    trimmedData.level = stateModalForm.inputSkillLevel;\n    const isValid = SkillsValidator.validate(trimmedData, notify);\n\n    if (isValid) {\n      dispatch(createSkill({\n        skill: {\n          name: trimmedData.name,\n          level: trimmedData.level\n        }\n      }, notify, setOpen));\n      setStateModalForm({\n        inputSkillLevel: 0\n      });\n      setTimeout(() => {\n        dispatch(getSkills());\n      }, 1000); // setOpen(false);\n    }\n  }\n\n  const [isSearchActive, setIsSearchActive] = React.useState(false);\n\n  const handleModalToggler = () => {\n    setOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SkillsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SkillsHeader, {\n      skillsArr: skills,\n      modalToggler: handleModalToggler,\n      isSearchActive: isSearchActive,\n      setIsSearchActive: setIsSearchActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SkillsContent, {\n      is: true,\n      children: [skills && /*#__PURE__*/_jsxDEV(SkillsListHoler, {\n        skills: skills,\n        isSearchActive: isSearchActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddSkillModal, {\n        isOpen: isOpen,\n        setOpen: setOpen,\n        inputRef: inputRef,\n        levelChanged: levelChanged,\n        handleSave: handleSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Skills, \"D8aaJ0H7aoVcuSITNsD53rg5C9Q=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useDispatch];\n});\n\n_c = Skills;\nexport default Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useDispatch","useSelector","getSkills","createSkill","SkillsHeader","SkillsContent","SkillsListHoler","AddSkillModal","SkillsContainer","ToastContainer","notify","SkillsValidator","Skills","props","initialStateModalForm","inputSkillLevel","navigate","user","currentUser","state","auth","stateModalForm","setStateModalForm","isOpen","setOpen","skills","dispatch","inputRef","levelChanged","newLevel","trimData","data","name","trim","handleSave","e","preventDefault","reqBody","current","inputSkillName","value","trimmedData","level","isValid","validate","skill","setTimeout","isSearchActive","setIsSearchActive","handleModalToggler"],"sources":["/home/amol/Submit On/client/src/pages/Skills/Skills.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSkills, createSkill } from \"../../actions/skills\";\n\nimport SkillsHeader from \"./components/SkillsHeader\";\nimport SkillsContent from \"./components/SkillsContent\";\nimport SkillsListHoler from \"./components/SkillsListHoler\";\nimport AddSkillModal from \"./components/AddSkillModal\";\nimport SkillsContainer from \"./components/SkillsContainer\";\n\nimport \"./Skills.css\";\nimport { ToastContainer, notify } from \"../../utils/toast\";\nimport SkillsValidator from \"../../validation/Skills\";\n\nfunction Skills(props) {\n  const initialStateModalForm = {\n    inputSkillLevel: 0,\n  };\n\n  let navigate = useNavigate();\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const [stateModalForm, setStateModalForm] = useState(initialStateModalForm);\n  const [isOpen, setOpen] = useState(false);\n\n  const skills = useSelector((state) => state.skills);\n  const dispatch = useDispatch();\n\n  const inputRef = useRef({});\n\n  useEffect(() => {\n    if (!currentUser) {\n      navigate(\"/login\");\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    dispatch(getSkills());\n  }, []);\n\n  const levelChanged = (newLevel) => {\n    setStateModalForm({\n      ...stateModalForm,\n      inputSkillLevel: newLevel,\n    });\n  };\n\n  const trimData = (data) => {\n    return {\n      name: data.name.trim(),\n    };\n  };\n\n  function handleSave(e) {\n    e.preventDefault();\n    const reqBody = {\n      name: inputRef.current.inputSkillName.value,\n    };\n    let trimmedData = trimData(reqBody);\n    trimmedData.level = stateModalForm.inputSkillLevel;\n\n    const isValid = SkillsValidator.validate(trimmedData, notify);\n    if (isValid) {\n      dispatch(\n        createSkill(\n          {\n            skill: {\n              name: trimmedData.name,\n              level: trimmedData.level,\n            },\n          },\n          notify,\n          setOpen\n        )\n      );\n      setStateModalForm({\n        inputSkillLevel: 0,\n      });\n      setTimeout(() => {\n        dispatch(getSkills());\n      }, 1000);\n      // setOpen(false);\n    }\n   \n  }\n\n  const [isSearchActive, setIsSearchActive] = React.useState(false);\n\n  const handleModalToggler = () => {\n    setOpen(!isOpen);\n  };\n\n  return (\n    <SkillsContainer>\n      <SkillsHeader\n        skillsArr={skills}\n        modalToggler={handleModalToggler}\n        isSearchActive={isSearchActive}\n        setIsSearchActive={setIsSearchActive}\n      />\n      <SkillsContent is>\n        {skills && (\n          <SkillsListHoler skills={skills} isSearchActive={isSearchActive} />\n        )}\n        <AddSkillModal\n          isOpen={isOpen}\n          setOpen={setOpen}\n          inputRef={inputRef}\n          levelChanged={levelChanged}\n          handleSave={handleSave}\n        />\n        <ToastContainer />\n      </SkillsContent>\n    </SkillsContainer>\n  );\n}\n\nexport default Skills;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}