{"ast":null,"code":"var _jsxFileName = \"/home/amol/Downloads/frontend/portfolio/src/components/AutoCompleteSearchInput/AutoCompleteSearchInput.jsx\";\nimport React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AutoCompleteSearchInput.css\";\nimport SearchIcon from \"../../assets/icons/search.svg\";\nimport PlusRedIcon from \"../../assets/icons/plus_red.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AutoCompleteSearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      this.setState({\n        focused: true\n      });\n      this.props.setSearchActive(true); // Filter our suggestions that don't contain the user's input\n\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state; // User pressed the enter key\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } // User pressed the up arrow\n      else if (e.keyCode === 38) {\n        if (activeSuggestion === 0) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion - 1\n        });\n      } // User pressed the down arrow\n      else if (e.keyCode === 40) {\n        if (activeSuggestion - 1 === filteredSuggestions.length) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion + 1\n        });\n      } // User pressed the escape key\n      else if (e.keyCode === 27) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      focused: false,\n      addBtnClicked: false\n    };\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions\",\n          children: filteredSuggestions.map((suggestion, index) => {\n            let className; // Flag the active suggestion with a class\n\n            if (index === activeSuggestion) {\n              className = \"suggestion-active\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: onClick,\n              children: suggestion\n            }, suggestion, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this);\n      } else {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-suggestions\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Oops! Sorry No Match !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    const searchDivClass = this.state.focused ? \"search-div-transparent\" : \"search-div\";\n\n    const onFocus = () => {\n      // this.props.setIsActive(true);\n      this.setState({\n        focused: true\n      });\n    };\n\n    const onBlur = e => {\n      // this.props.setIsActive(false);\n      // this.props.setSearchActive(false);\n      // this.setState({ focused: false });\n      if (this.state.addBtnClicked) {\n        this.state.modalToggler;\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: searchDivClass,\n      onBlur: onBlur,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: onChange,\n            onKeyDown: onKeyDown,\n            value: userInput,\n            placeholder: this.props.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), this.state.focused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.focused ? \"suggestion-container show\" : \"suggestion-container hide\",\n        children: [suggestionsListComponent, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-btn-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: PlusRedIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"add-btn\",\n            className: \"add-new\",\n            onClick: () => {\n              this.setState({\n                addBtnClicked: true\n              });\n            },\n            children: [\"Add a new \", this.props.btnName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAutoCompleteSearchInput.propTypes = {\n  suggestions: PropTypes.instanceOf(Array)\n};\nAutoCompleteSearchInput.defaultProps = {\n  suggestions: []\n};\nexport default AutoCompleteSearchInput;","map":{"version":3,"names":["React","Component","useState","PropTypes","SearchIcon","PlusRedIcon","AutoCompleteSearchInput","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","setState","focused","setSearchActive","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","length","addBtnClicked","render","suggestionsListComponent","map","index","className","searchDivClass","onFocus","onBlur","modalToggler","placeholder","btnName","propTypes","instanceOf","Array","defaultProps"],"sources":["/home/amol/Downloads/frontend/portfolio/src/components/AutoCompleteSearchInput/AutoCompleteSearchInput.jsx"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AutoCompleteSearchInput.css\";\nimport SearchIcon from \"../../assets/icons/search.svg\";\nimport PlusRedIcon from \"../../assets/icons/plus_red.svg\";\n\nclass AutoCompleteSearchInput extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n  };\n\n  static defaultProps = {\n    suggestions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      focused: false,\n      addBtnClicked: false,\n    };\n  }\n\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n    this.setState({\n      focused: true,\n    });\n\n    this.props.setSearchActive(true);\n    // Filter our suggestions that don't contain the user's input\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n\n  onClick = (e) => {\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText,\n    });\n  };\n\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n\n    // User pressed the enter key\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      });\n    }\n    // User pressed the up arrow\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    }\n    // User pressed the down arrow\n    else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n    // User pressed the escape key\n    else if (e.keyCode === 27) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: \"\",\n      });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = (\n          <ul className=\"suggestions\">\n            {filteredSuggestions.map((suggestion, index) => {\n              let className;\n\n              // Flag the active suggestion with a class\n              if (index === activeSuggestion) {\n                className = \"suggestion-active\";\n              }\n\n              return (\n                <li className={className} key={suggestion} onClick={onClick}>\n                  {suggestion}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      } else {\n        suggestionsListComponent = (\n          <div className=\"no-suggestions\">\n            <em>Oops! Sorry No Match !</em>\n          </div>\n        );\n      }\n    }\n\n    const searchDivClass = this.state.focused\n      ? \"search-div-transparent\"\n      : \"search-div\";\n\n    const onFocus = () => {\n      // this.props.setIsActive(true);\n      this.setState({ focused: true });\n    };\n    const onBlur = (e) => {\n      // this.props.setIsActive(false);\n      // this.props.setSearchActive(false);\n      // this.setState({ focused: false });\n      if (this.state.addBtnClicked) {\n        this.state.modalToggler\n      }\n    };\n\n    return (\n      <div className={searchDivClass} onBlur={onBlur}>\n        <div className=\"search-wrapper\">\n          <div className=\"icon-input-div\">\n            <img src={SearchIcon} alt=\"\" />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              onKeyDown={onKeyDown}\n              value={userInput}\n              placeholder={this.props.placeholder}\n            />\n          </div>\n        </div>\n        {this.state.focused && (\n          <div\n            className={\n              this.state.focused\n                ? \"suggestion-container show\"\n                : \"suggestion-container hide\"\n            }\n          >\n            {suggestionsListComponent}\n            <div className=\"add-btn-div\">\n              <img src={PlusRedIcon} alt=\"\" />\n              <button\n                id=\"add-btn\"\n                className=\"add-new\"\n                onClick={() => {\n                  this.setState({ addBtnClicked: true });\n                }}\n              >\n                Add a new {this.props.btnName}\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AutoCompleteSearchInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}