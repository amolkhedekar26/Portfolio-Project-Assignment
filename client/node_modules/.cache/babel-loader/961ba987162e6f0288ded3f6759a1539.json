{"ast":null,"code":"var _jsxFileName = \"/home/amol/Downloads/frontend/portfolio/src/components/AutoCompleteSearchInput/AutoCompleteSearchInput.jsx\";\nimport React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AutoCompleteSearchInput.css\";\nimport SearchIcon from \"../../assets/icons/search.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AutoCompleteSearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value; // Filter our suggestions that don't contain the user's input\n\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state; // User pressed the enter key\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } // User pressed the up arrow\n      else if (e.keyCode === 38) {\n        if (activeSuggestion === 0) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion - 1\n        });\n      } // User pressed the down arrow\n      else if (e.keyCode === 40) {\n        if (activeSuggestion - 1 === filteredSuggestions.length) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion + 1\n        });\n      }\n    };\n\n    this.searchDivClass = this.state.isActive ? \"search-div-transparent\" : \"app\";\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      isActive: false\n    };\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"suggestions\",\n          children: [filteredSuggestions.map((suggestion, index) => {\n            let className; // Flag the active suggestion with a class\n\n            if (index === activeSuggestion) {\n              className = \"suggestion-active\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: onClick,\n              children: suggestion\n            }, suggestion, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-new\",\n            children: \"Add New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this);\n      } else {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"no-suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"No suggestions, you're on your own!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-new\",\n            children: \"Add New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: onChange,\n            onKeyDown: onKeyDown,\n            value: userInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), suggestionsListComponent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAutoCompleteSearchInput.propTypes = {\n  suggestions: PropTypes.instanceOf(Array)\n};\nAutoCompleteSearchInput.defaultProps = {\n  suggestions: []\n};\nexport default AutoCompleteSearchInput;","map":{"version":3,"names":["React","Component","useState","PropTypes","SearchIcon","AutoCompleteSearchInput","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","length","searchDivClass","isActive","render","suggestionsListComponent","map","index","className","propTypes","instanceOf","Array","defaultProps"],"sources":["/home/amol/Downloads/frontend/portfolio/src/components/AutoCompleteSearchInput/AutoCompleteSearchInput.jsx"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AutoCompleteSearchInput.css\";\nimport SearchIcon from \"../../assets/icons/search.svg\";\n\nclass AutoCompleteSearchInput extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n  };\n\n  static defaultProps = {\n    suggestions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      isActive: false,\n    };\n  }\n\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n\n    // Filter our suggestions that don't contain the user's input\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n\n  onClick = (e) => {\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText,\n    });\n  };\n\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n\n    // User pressed the enter key\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      });\n    }\n    // User pressed the up arrow\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    }\n    // User pressed the down arrow\n    else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n  searchDivClass = this.state.isActive ? \"search-div-transparent\" : \"app\";\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = (\n          <ul class=\"suggestions\">\n            {filteredSuggestions.map((suggestion, index) => {\n              let className;\n\n              // Flag the active suggestion with a class\n              if (index === activeSuggestion) {\n                className = \"suggestion-active\";\n              }\n\n              return (\n                <li className={className} key={suggestion} onClick={onClick}>\n                  {suggestion}\n                </li>\n              );\n            })}\n            <button className=\"add-new\">Add New</button>\n          </ul>\n        );\n      } else {\n        suggestionsListComponent = (\n          <div class=\"no-suggestions\">\n            <em>No suggestions, you're on your own!</em>\n            <button className=\"add-new\">Add New</button>\n          </div>\n        );\n      }\n    }\n    return (\n      <div className=\"search-div\">\n        <div className=\"search-wrapper\">\n          <div className=\"icon-input-div\">\n            <img src={SearchIcon} alt=\"\" />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              onKeyDown={onKeyDown}\n              value={userInput}\n            />\n          </div>\n        </div>\n        {suggestionsListComponent}\n      </div>\n    );\n  }\n}\n\nexport default AutoCompleteSearchInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}