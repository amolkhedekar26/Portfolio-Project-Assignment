{"ast":null,"code":"const email = email => {\n  return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n};\n\nconst password = password => {\n  return String(password).toLowerCase().match(new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"));\n};\n\nconst matchPasswords = (password, confirmPassword) => {\n  return password === confirmPassword;\n};\n\nconst validate = (data, notify) => {\n  const {\n    email,\n    password\n  } = data;\n\n  if (!email || email === \"\") {\n    notify(\"Email is required\", \"error\");\n    return false;\n  }\n\n  if (!checkEmail(email)) {\n    notify(\"Email is invalid\", \"error\");\n    return false;\n  }\n\n  if (!password || password === \"\") {\n    notify(\"Password is required\", \"error\");\n    return false;\n  }\n\n  return true;\n};\n\nexport default {\n  validate\n};","map":{"version":3,"names":["email","String","toLowerCase","match","password","RegExp","matchPasswords","confirmPassword","validate","data","notify","checkEmail"],"sources":["/home/amol/Downloads/frontend/portfolio/src/validation/SignUp.js"],"sourcesContent":["const email = (email) => {\n  return String(email)\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n};\n\nconst password = (password) => {\n  return String(password)\n    .toLowerCase()\n    .match(\n      new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\")\n    );\n};\n\nconst matchPasswords = (password, confirmPassword) => {\n  return password === confirmPassword;\n};\n\nconst validate = (data, notify) => {\n  const { email, password } = data;\n  if (!email || email === \"\") {\n    notify(\"Email is required\", \"error\");\n    return false;\n  }\n  if (!checkEmail(email)) {\n    notify(\"Email is invalid\", \"error\");\n    return false;\n  }\n  if (!password || password === \"\") {\n    notify(\"Password is required\", \"error\");\n    return false;\n  }\n\n  return true;\n};\n\nexport default {\n  validate,\n};\n"],"mappings":"AAAA,MAAMA,KAAK,GAAIA,KAAD,IAAW;EACvB,OAAOC,MAAM,CAACD,KAAD,CAAN,CACJE,WADI,GAEJC,KAFI,CAGH,uJAHG,CAAP;AAKD,CAND;;AAQA,MAAMC,QAAQ,GAAIA,QAAD,IAAc;EAC7B,OAAOH,MAAM,CAACG,QAAD,CAAN,CACJF,WADI,GAEJC,KAFI,CAGH,IAAIE,MAAJ,CAAW,6DAAX,CAHG,CAAP;AAKD,CAND;;AAQA,MAAMC,cAAc,GAAG,CAACF,QAAD,EAAWG,eAAX,KAA+B;EACpD,OAAOH,QAAQ,KAAKG,eAApB;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;EACjC,MAAM;IAAEV,KAAF;IAASI;EAAT,IAAsBK,IAA5B;;EACA,IAAI,CAACT,KAAD,IAAUA,KAAK,KAAK,EAAxB,EAA4B;IAC1BU,MAAM,CAAC,mBAAD,EAAsB,OAAtB,CAAN;IACA,OAAO,KAAP;EACD;;EACD,IAAI,CAACC,UAAU,CAACX,KAAD,CAAf,EAAwB;IACtBU,MAAM,CAAC,kBAAD,EAAqB,OAArB,CAAN;IACA,OAAO,KAAP;EACD;;EACD,IAAI,CAACN,QAAD,IAAaA,QAAQ,KAAK,EAA9B,EAAkC;IAChCM,MAAM,CAAC,sBAAD,EAAyB,OAAzB,CAAN;IACA,OAAO,KAAP;EACD;;EAED,OAAO,IAAP;AACD,CAhBD;;AAkBA,eAAe;EACbF;AADa,CAAf"},"metadata":{},"sourceType":"module"}